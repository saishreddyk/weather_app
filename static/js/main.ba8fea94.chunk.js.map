{"version":3,"sources":["logo.svg","Device.js","ResultFadeIn.js","BigLabel.js","SmallLabel.js","Text.js","Result.js","SearchCity.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ResultFadeIn","keyframes","BigLabel","styled","h2","color","weight","fontSize","align","firstToUpperCase","SmallLabel","h4","Text","span","Results","div","LocationWrapper","WeatherWrapper","Temperature","h3","WeatherDetailsWrapper","WeatherDetail","WeatherIcon","TemperatureWrapper","WorkAroundWrapper","Result","city","country","date","description","main","temp","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","weatherIcon","icon","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faCloud","faSmog","Math","floor","SearchBar","form","showResult","SearchInput","input","SearchIcon","SearchCity","submit","value","change","onSubmit","type","placeholder","onChange","faSearch","Heading","text","Home","useState","location","setLocation","data","setData","className","style","backgroundColor","e","target","preventDefault","fetch","then","res","json","data1","currentDate","Date","getDay","getDate","getMonth","sys","toLocaleTimeString","slice","weatherInfo","name","weather","temp_max","temp_min","speed","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba8fea94.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const size = {\r\n    mobileS: '320px',\r\n    mobileM: '375px',\r\n    mobileL: '525px',\r\n    tablet: '768px',\r\n    laptop: '1024px',\r\n    laptopL: '1440px',\r\n    desktop: '2560px',\r\n  };\r\n  \r\n  const device = {\r\n    mobileS: `(min-width: ${size.mobileS})`,\r\n    mobileM: `(min-width: ${size.mobileM})`,\r\n    mobileL: `(min-width: ${size.mobileL})`,\r\n    tablet: `(min-width: ${size.tablet})`,\r\n    laptop: `(min-width: ${size.laptop})`,\r\n    laptopL: `(min-width: ${size.laptopL})`,\r\n    desktop: `(min-width: ${size.desktop})`,\r\n    desktopL: `(min-width: ${size.desktop})`,\r\n  };\r\n  \r\n  export default device;","import { keyframes } from 'styled-components';\r\n\r\nconst ResultFadeIn = keyframes`\r\n  to {\r\n    opacity: 1;\r\n        visibility: visible;\r\n        top: 0;\r\n  }\r\n`;\r\n\r\nexport default ResultFadeIn;","\r\nimport styled from 'styled-components';\r\nimport device from './Device';\r\n\r\nconst BigLabel = styled.h2`\r\n  color: ${({ color }) => color || '#FFFFFF'};\r\n  display: block;\r\n  font-weight: ${({ weight }) => weight || '600'};\r\n  font-size: ${({ fontSize }) => fontSize || '30px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  padding: 5px 0;\r\n  ${({ firstToUpperCase }) =>\r\n    firstToUpperCase &&\r\n    `\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n  `}\r\n  @media ${device.tablet} {\r\n    font-size: ${({ fontSize }) => fontSize || '37px'};\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: ${({ fontSize }) => fontSize || '43px'};\r\n  } \r\n  @media ${device.laptopL} {\r\n    font-size: ${({ fontSize }) => fontSize || '52px'};\r\n  } \r\n`;\r\n\r\nexport default BigLabel;","import styled from 'styled-components';\r\nimport device from './Device';\r\n\r\nconst SmallLabel = styled.h4`\r\n  color: ${({ color }) => color || '#FFFFFF'};\r\n  display: block;\r\n  font-weight: ${({ weight }) => weight || '600'};\r\n  font-size: ${({ fontSize }) => fontSize || '15px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  padding: 5px 0;\r\n  ${({ firstToUpperCase }) =>\r\n    firstToUpperCase &&\r\n    `\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n  `}\r\n  @media ${device.tablet} {\r\n    font-size: ${({ fontSize }) => fontSize || '20px'};\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: ${({ fontSize }) => fontSize || '23px'};\r\n  } \r\n  @media ${device.laptopL} {\r\n    font-size: ${({ fontSize }) => fontSize || '26px'};\r\n  }\r\n`;\r\n\r\nexport default SmallLabel;\r\n","import styled from 'styled-components';\r\nimport device from './Device';\r\n\r\nconst Text = styled.span`\r\n  color: ${({ color }) => color || '#FFFFFF'};\r\n  display: block;\r\n  font-size: ${({ fontSize }) => fontSize || '12px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  ${({ firstToUpperCase }) =>\r\n    firstToUpperCase &&\r\n    `\r\n  &:first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n  `}\r\n  @media ${device.tablet} {\r\n    font-size: ${({ fontSize }) => fontSize || '15px'};\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: ${({ fontSize }) => fontSize || '17px'};\r\n  } \r\n  @media ${device.laptopL} {\r\n    font-size: ${({ fontSize }) => fontSize || '19px'};\r\n  }\r\n`;\r\n\r\nexport default Text;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faCloud,\r\n    faBolt,\r\n    faCloudRain,\r\n    faCloudShowersHeavy,\r\n    faSnowflake,\r\n    faSun,\r\n    faSmog,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport styled from 'styled-components';\r\nimport device from './Device';\r\nimport ResultFadeIn from './ResultFadeIn';\r\nimport BigLabel from './BigLabel';\r\nimport SmallLabel from './SmallLabel.js';\r\nimport Text from './Text';\r\n\r\n\r\nconst Results = styled.div`\r\n    display: flex;\r\n    flex-basis: auto;\r\n    flex-wrap: wrap;\r\n    /* flex-direction: row; */\r\n    /* justify-content: space-between; */\r\n    justify-content: center;\r\n    padding: 40px 0;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    position: relative;\r\n    top: 20px;\r\n    animation: ${ResultFadeIn} 0.5s 0.4s forwards;\r\n`;\r\n\r\nconst LocationWrapper = styled.div`\r\n    flex-basis: 100%;\r\n    justify-content: center;\r\n    padding: 10px auto;\r\n    display: flex;\r\n`;\r\n\r\nconst WeatherWrapper = styled.div`\r\n    flex-basis:     auto;\r\n    display: grid;\r\n    justify-content: center;\r\n    grid-template-columns: auto 1fr;\r\n    margin: 20px 0;\r\n    grid-gap: 30px;\r\n    @media ${device.mobileL} {\r\n    flex-basis: 100%;\r\n    /* padding-right: 10px; */\r\n    }\r\n    @media ${device.tablet} {\r\n        grid-template-columns: 1fr 1fr;\r\n        padding-right: 20px;\r\n    }\r\n`;\r\n\r\nconst Temperature = styled.h3`\r\n    display: block;\r\n    font-size: 50px;\r\n    font-weight: 400;\r\n    color: #ffffff;\r\n    @media ${device.tablet} {\r\n        font-size: 70px;\r\n    }\r\n    @media ${device.laptop} {\r\n        font-size: 90px;\r\n    }\r\n    @media ${device.laptopL} {\r\n        font-size: 110px;\r\n  }  \r\n`;\r\n\r\n\r\nconst WeatherDetailsWrapper = styled.div`\r\n    flex-basis: 100%;\r\n    display: flex;\r\n    flex: content;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 10px 0;\r\n    margin: 20px 20px 20px ;\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    border-radius: 10px;\r\n    justify-content: center;\r\n`;\r\n\r\nconst WeatherDetail = styled.div`\r\n    flex-basis: calc(100%/4);\r\n    padding: 10px;\r\n`;\r\nconst WeatherIcon = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  font-size: 70px;\r\n  color: #ffffff;\r\n  align-self: center;\r\n  @media ${device.tablet} {\r\n    font-size: 100px;\r\n    justify-content: flex-end;\r\n  }\r\n  @media ${device.laptop} {\r\n    font-size: 120px;\r\n  }\r\n  @media ${device.laptopL} {\r\n    font-size: 140px;\r\n  }\r\n`;\r\n\r\nconst TemperatureWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst WorkAroundWrapper = styled.div`\r\n    display: flex;\r\n    /* flex-wrap: wrap-reverse; */\r\n    justify-content: space-around;\r\n    /* flex-direction: row; */\r\n    align-items: center;\r\n    /* flex-basis: auto; */\r\n    /* flex-grow: inherit; */\r\n    align-content: space-around;\r\n`\r\nconst Result = ({ city,\r\n    country,\r\n    date,\r\n    description,\r\n    main,\r\n    temp,\r\n    sunset,\r\n    sunrise,\r\n    humidity,\r\n    wind,\r\n    highestTemp,\r\n    lowestTemp, }) => {\r\n\r\n    let weatherIcon = null;\r\n\r\n    if (main === 'Thunderstorm') {\r\n        weatherIcon = <FontAwesomeIcon icon={faBolt} />;\r\n    } else if (main === 'Drizzle') {\r\n        weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\r\n    } else if (main === 'Rain') {\r\n        weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} color=\"white\" />;\r\n    } else if (main === 'Snow') {\r\n        weatherIcon = <FontAwesomeIcon icon={faSnowflake} color=\"white\"/>;\r\n    } else if (main === 'Clear') {\r\n        weatherIcon = <FontAwesomeIcon icon={faSun} />;\r\n    } else if (main === 'Clouds') {\r\n        weatherIcon = <FontAwesomeIcon icon={faCloud} color={\"white\"}/>;\r\n    } else {\r\n        weatherIcon = <FontAwesomeIcon icon={faSmog} />;\r\n    }\r\n    return (\r\n        <Results>\r\n            <LocationWrapper>\r\n                <BigLabel>\r\n                    {city}, {country}\r\n                </BigLabel>\r\n                <SmallLabel weight=\"400\">{date}</SmallLabel>\r\n            </LocationWrapper>\r\n            <WeatherWrapper>\r\n                <WorkAroundWrapper>\r\n                <WeatherIcon>{weatherIcon}</WeatherIcon>\r\n                </WorkAroundWrapper>\r\n                <WorkAroundWrapper>\r\n                <TemperatureWrapper>\r\n                    <Temperature>{Math.floor(temp) - 272}&#176;</Temperature>\r\n                    <SmallLabel weight=\"400\" firstToUpperCase>\r\n                        {description}\r\n                    </SmallLabel>\r\n                </TemperatureWrapper>\r\n                </WorkAroundWrapper>\r\n            </WeatherWrapper>\r\n            <WeatherDetailsWrapper>\r\n                <WeatherDetail>\r\n                    <SmallLabel align=\"center\" weight=\"400\">\r\n                        {Math.floor(highestTemp) - 272}&#176;\r\n                    </SmallLabel>\r\n                    <Text align=\"center\">High   </Text>\r\n                </WeatherDetail>\r\n                <WeatherDetail>\r\n                    <SmallLabel align=\"center\" weight=\"400\">\r\n                        {Math.floor(lowestTemp) - 272}&#176;\r\n                    </SmallLabel>\r\n                    <Text align=\"center\">Low</Text>\r\n                </WeatherDetail>\r\n                <WeatherDetail>\r\n                    <SmallLabel align=\"center\" weight=\"400\">\r\n                        {sunrise}\r\n                    </SmallLabel>\r\n                    <Text align=\"center\">Sunrise</Text>\r\n                </WeatherDetail>\r\n                <WeatherDetail>\r\n                    <SmallLabel align=\"center\" weight=\"400\">\r\n                        {sunset}\r\n                    </SmallLabel>\r\n                    <Text align=\"center\">Sunset</Text>\r\n                </WeatherDetail>\r\n                <WeatherDetail>\r\n                    <SmallLabel align=\"center\" weight=\"400\">\r\n                        {wind}mph\r\n                    </SmallLabel>\r\n                    <Text align=\"center\">Wind</Text>\r\n                </WeatherDetail>\r\n                <WeatherDetail>\r\n                    <SmallLabel align=\"center\" weight=\"400\">\r\n                        {humidity}%\r\n                    </SmallLabel>\r\n                    <Text align=\"center\">Rain</Text>\r\n                </WeatherDetail>\r\n            </WeatherDetailsWrapper>\r\n        </Results>\r\n    )\r\n};\r\n\r\nexport default Result;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport device from './Device';\r\n\r\nconst SearchBar = styled.form`\r\n    top: ${({ showResult }) => (showResult ? '0%' : '30%')};;\r\n    position: relative;\r\n    margin: 0 auto;\r\n    max-width: 500px;\r\n    transition: 0.8s 0.5s;\r\n    @media ${device.laptopL} {\r\n    max-width: 600px;\r\n    }\r\n    @media ${device.desktop} {\r\n        max-width: 700px;\r\n    }\r\n`\r\n\r\nconst SearchInput = styled.input`\r\n    width: 100%;\r\n    border: none;\r\n    background-color: #FFFFFF;\r\n    font-size: 16px;\r\n    padding: 10px 15px 10px 40px;\r\n    color: #c5c5c5;\r\n    transition: 0.2s;\r\n    border-radius: 20px;\r\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n    :focus {\r\n        color: #191919;\r\n        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\r\n        outline: none;\r\n    }\r\n`\r\n\r\nconst SearchIcon = styled.span`\r\n    display: block;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 22px;\r\n    transform: translate(-50%, -50%);\r\n    height: 14px;\r\n    width: 14px;\r\n    font-size: 14px;\r\n    color: #c5c5c5;\r\n`;\r\n\r\nconst SearchCity = ({submit, value, change, showResult}) => {\r\n    return (\r\n        <div>\r\n            <SearchBar showResult={showResult} onSubmit={submit}>\r\n                <SearchInput type=\"text\" value={value} placeholder=\"Enter City\" onChange={change} />\r\n                <SearchIcon>\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                </SearchIcon>\r\n            </SearchBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchCity;","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n// import \"./Home.css\";\r\nimport Result from \"./Result\";\r\nimport SearchCity from \"./SearchCity\";\r\n\r\nconst WeatherWrapper = styled.div`\r\n  max-width: 2000px;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  position: relative;\r\n  height: 100vh;\r\n  flex: content;\r\n`;\r\n\r\nconst Heading = styled.text`\r\n  color: aliceblue;\r\n  font-size: large;\r\n`\r\nconst Home = () => {\r\n    var [location, setLocation] = useState('Hyderabad');\r\n    var url = \"https://api.openweathermap.org/data/2.5/weather?q=Hyderabad&appid=93f26e3c57081a6210de53b8dcfdfea4\";\r\n    var [data, setData] = useState(\"\");\r\n\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + location + \"&appid=93f26e3c57081a6210de53b8dcfdfea4\";\r\n        fetch(url).then(res => {\r\n            return res.json();\r\n        }).then((data1) => {\r\n            const months = [\r\n                'January',\r\n                'February',\r\n                'March',\r\n                'April',\r\n                'May',\r\n                'June',\r\n                'July',\r\n                'August',\r\n                'September',\r\n                'October',\r\n                'Nocvember',\r\n                'December',\r\n            ];\r\n            const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n            const currentDate = new Date();\r\n            const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]\r\n                }`;\r\n            const sunset = new Date(data1.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\r\n            const sunrise = new Date(data1.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\r\n            const weatherInfo = {\r\n                city: data1.name,\r\n                country: data1.sys.country,\r\n                date,\r\n                description: data1.weather[0].description,\r\n                main: data1.weather[0].main,\r\n                temp: data1.main.temp,\r\n                highestTemp: data1.main.temp_max,\r\n                lowestTemp: data1.main.temp_min,\r\n                sunrise,\r\n                sunset,\r\n                // clouds: data1.clouds.all,\r\n                humidity: data1.main.humidity,\r\n                wind: data1.wind.speed,\r\n            };\r\n            setData(weatherInfo);\r\n        });\r\n    }\r\n    return (\r\n        <WeatherWrapper className=\"Home\" style={{ backgroundColor: \"#774FC1\" }}>\r\n            <Heading>Weather-App</Heading>\r\n            <SearchCity\r\n                value={location}\r\n                showResult={data}\r\n                change={(e) => setLocation(e.target.value)}\r\n                submit={handleSubmit}\r\n            />\r\n            {data && <Result city={data.city}\r\n                country={data.country}\r\n                date={data.date}\r\n                description={data.description}\r\n                main={data.main}\r\n                temp={data.temp}\r\n                sunset={data.sunset}\r\n                sunrise={data.sunrise}\r\n                humidity={data.humidity}\r\n                wind={data.wind}\r\n                highestTemp={data.highestTemp}\r\n                lowestTemp={data.lowestTemp} />}\r\n        </WeatherWrapper>\r\n    );\r\n}\r\n\r\nexport default Home;","import logo from './logo.svg';\nimport './App.css';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}